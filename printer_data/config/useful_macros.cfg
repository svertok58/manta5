[gcode_shell_command cam-stop]
command: /etc/init.d/S50webcam stop
timeout: 10
verbose: false

[gcode_shell_command cam-start]
command: /etc/init.d/S50webcam start
timeout: 10
verbose: false

[gcode_macro STOP_CAMERA]
description: Stop camera
gcode:
    RUN_SHELL_COMMAND CMD=cam-stop
    RESPOND TYPE=command MSG='Camera stopped'
    SET_GCODE_VARIABLE MACRO=START_CAMERA VARIABLE=started VALUE=False
    G4 P1000            # wait a bit after the camera stops

[gcode_macro START_CAMERA]
variable_started: True
description: Start camera
gcode:
    G4 P1000            # wait a bit before the camera starts
    RUN_SHELL_COMMAND CMD=cam-start
    RESPOND TYPE=command MSG='Camera started'
    SET_GCODE_VARIABLE MACRO=START_CAMERA VARIABLE=started VALUE=True

#[gcode_macro CONFIG_OVERRIDES]
#gcode:
  #RUN_SHELL_COMMAND CMD=config_overrides


[gcode_macro PID_CALIBRATE_BED]
description: Bed Pid Calibrate
gcode:
  PID_CALIBRATE HEATER=heater_bed TARGET={params.BED_TEMP|default(65)}

[gcode_macro PID_CALIBRATE_HOTEND]
description: Hotend Pid Calibrate
gcode:
  PID_CALIBRATE HEATER=extruder TARGET={params.HOTEND_TEMP|default(230)}


# https://discord.com/channels/1154500511777693819/1172473583604346899
# https://github.com/Guilouz/Creality-Helper-Script/blob/main/files/macros/useful-macros.cfg
[gcode_macro WARMUP]
description: Stress Test
variable_maxd: 14142.14 ; = SQRT(2*maxy)
gcode:
  {% set min_loops = 2 %}
  {% set max_loops = params.LOOPS|default(3)|int %}
  {% if 'LOOPS' in params|upper %}
    {% if max_loops < min_loops %}
      {% set max_loops = min_loops %}
    {% endif %}
  {% endif %}
  {% set loop_cnt = max_loops %}
  {% set maxx = params.X_ACCEL_MAX|default(10000)|int %}
  {% set maxy = params.Y_ACCEL_MAX|default(10000)|int %}
  {% set max_x = (printer.toolhead.axis_maximum.x|int-5) %}
  {% set max_y = (printer.toolhead.axis_maximum.y|int-5) %}
  {% set loop_step_y = max_y//(loop_cnt-1) %}
  {% set loop_step_x = max_x//(loop_cnt-1) %}
  {% set y_park = printer.toolhead.axis_maximum.y/2 %}
  {% set x_park = printer.toolhead.axis_maximum.x|float - 10.0 %}
  {% if printer.toolhead.homed_axes != "xyz" %}
    G28
  {% endif %}
  SET_VELOCITY_LIMIT ACCEL={maxx} ACCEL_TO_DECEL={maxx/2}
  {% for number in range(10,max_y+11,loop_step_y) %}
    {% if number >= max_y %}
    {% set number = max_y %}
    {% endif %}
    G1 F{maxy} X10 Y{number}
    G1 F{maxx} X{max_x} Y{number}
  {% endfor %}
  SET_VELOCITY_LIMIT ACCEL={maxy} ACCEL_TO_DECEL={maxy/2}
  {% for number in range(10,max_x+11,loop_step_y) %}
    {% if number >= max_x %}
    {% set number = max_x %}
    {% endif %}
    G1 F{maxy} X{number} Y{max_y}
    G1 F{maxy} X{number} Y10
  {% endfor %}
  SET_VELOCITY_LIMIT ACCEL={maxd} ACCEL_TO_DECEL={maxd/2}
  {% for times in range(loop_cnt) %}
    G1 F{maxx} X10 Y10
    G1 F{maxd} X{max_x} Y{max_y}
    G1 F{maxx} X10 Y{max_y}
    G1 F{maxd} X{max_x} Y10
    G1 F{maxy} X{max_x} Y{max_y}
    G1 F{maxd} X10 Y10
    G1 F{maxy} X10 Y{max_y}
    G1 F{maxd} X{max_x} Y10
  {% endfor %}
  SET_VELOCITY_LIMIT ACCEL={maxx} ACCEL_TO_DECEL={maxx/2}
  {% for times in range(loop_cnt) %}
    G1 F{maxy} X10 Y10
    G1 F{maxy} X10 Y{max_y}
    G1 F{maxx} X{max_x} Y{max_y}
    G1 F{maxy} X{max_x} Y10
    G1 F{maxx} X10 Y10
    G1 F{maxx} X{max_x} Y10
    G1 F{maxy} X{max_x} Y{max_y}
    G1 F{maxx} X10 Y{max_y}
  {% endfor %}
  G1 X{x_park} Y{y_park} F30000

[gcode_macro ZIGZAGS]
gcode:
    # Speed settings
    {% set min_speed = 3000 %}  # Minimum speed in mm/min
    {% set max_speed = 8000 %}  # Maximum speed in mm/min

    # Homing and raising Z axis
    {% if printer.toolhead.homed_axes != "xyz" %}
    RESPOND MSG="Homing"
    G28
    {% endif %}
    RESPOND MSG="let the game begin"
    G1 Z50 F300

    # Calculating boundaries and number of steps
    {% set x_max = printer.toolhead.axis_maximum.x|int %}
    {% set y_max = printer.toolhead.axis_maximum.y|int %}
    {% set edge_offset_x = x_max * 0.05 %}
    {% set edge_offset_y = y_max * 0.05 %}
    {% set x_range = x_max - edge_offset_x %}
    {% set y_range = y_max - edge_offset_y %}
    {% set num_steps_x = (x_range / 10)|int %}
    {% set num_steps_y = (y_range / 10)|int %}
    {% set speed_increment_x = (max_speed - min_speed) / num_steps_x %}
    {% set speed_increment_y = (max_speed - min_speed) / num_steps_y %}
    {% set current_speed_x = min_speed %}
    {% set current_speed_y = min_speed %}

    # Zigzag movements with increasing speed on X and Y
    {% for i in range(num_steps_x) %}
        # Movement along X
        G1 X{edge_offset_x + i * 10} Y{edge_offset_y} F{current_speed_x}
        G1 X{edge_offset_x + i * 10} Y{y_range} F{current_speed_x}
        {% set current_speed_x = current_speed_x + speed_increment_x %}
    {% endfor %}

    {% for j in range(num_steps_y) %}
        # Movement along Y
        G1 Y{edge_offset_y + j * 10} X{edge_offset_x} F{current_speed_y}
        G1 Y{edge_offset_y + j * 10} X{x_range} F{current_speed_y}
        {% set current_speed_y = current_speed_y + speed_increment_y %}
    {% endfor %}
